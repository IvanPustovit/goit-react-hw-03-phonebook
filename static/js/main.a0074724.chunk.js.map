{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","utils/storage.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["ContactForm","handleChangeName","nameValue","numberValue","handleChangeNumber","addToContacts","contactsId","className","classes","form","htmlFor","name","id","type","value","onChange","onClick","Filter","handleChangeNameFilter","filterContacts","onInputCapture","ContactList","contacts","deleteContact","length","map","el","key","number","delete","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","App","state","filter","notifyA","toast","notifyB","e","preventDefault","newContacts","shortid","generate","isContact","setState","prev","inputHandler","target","persist","toLowerCase","includes","ContactListNew","some","toLocaleLowerCase","contactsData","storage","this","prevState","console","log","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a0074724.chunk.js","sourcesContent":["import React from \"react\";\r\nimport classes from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst ContactForm = ({\r\n  handleChangeName,\r\n  nameValue,\r\n  numberValue,\r\n  handleChangeNumber,\r\n  addToContacts,\r\n  contactsId,\r\n}) => {\r\n  return (\r\n    <div className={classes.form}>\r\n      <form>\r\n        <label className={classes[\"label-name\"]} htmlFor={contactsId}>\r\n          Name\r\n          <input\r\n            name=\"name\"\r\n            id={contactsId}\r\n            type=\"text\"\r\n            value={nameValue}\r\n            onChange={handleChangeName}\r\n          />\r\n        </label>\r\n\r\n        <label className={classes[\"label-name\"]}>\r\n          Number\r\n          <input\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={numberValue}\r\n            onChange={handleChangeNumber}\r\n          />\r\n        </label>\r\n\r\n        <div>\r\n          <button type=\"text\" onClick={addToContacts}>\r\n            Add contact\r\n          </button>\r\n          <ToastContainer />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nContactForm.propTypes = {\r\n  handleChangeName: PropTypes.func.isRequired,\r\n  handleChangeNumber: PropTypes.func.isRequired,\r\n  nameValue: PropTypes.string.isRequired,\r\n  numberValue: PropTypes.string.isRequired,\r\n  addToContacts: PropTypes.func.isRequired,\r\n  contactsId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ handleChangeNameFilter, filterContacts }) => {\r\n  return (\r\n    <div>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        onChange={handleChangeNameFilter}\r\n        onInputCapture={filterContacts}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  handleChangeNameFilter: PropTypes.func.isRequired,\r\n  filterContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, filterContacts, deleteContact }) => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {filterContacts.length\r\n          ? filterContacts.map(el => (\r\n              <li key={el.name}>\r\n                {el.name} : {el.number}\r\n                <button\r\n                  type=\"button\"\r\n                  id={el.id}\r\n                  className={classes.delete}\r\n                  onClick={() => {\r\n                    deleteContact(el.id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))\r\n          : contacts.map(el => (\r\n              <li key={el.name}>\r\n                {el.name} : {el.number}\r\n                <button\r\n                  type=\"button\"\r\n                  id={el.id}\r\n                  className={classes.delete}\r\n                  onClick={() => {\r\n                    deleteContact(el.id);\r\n                  }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  filterContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","const save = (key, value) => {\n    try {\n      localStorage.setItem(key, JSON.stringify(value));\n    } catch (err) {\n      throw new Error();\n    }\n  };\n  const get = key => {\n    try {\n      const items = localStorage.getItem(key);\n      return items ? JSON.parse(items) : null;\n    } catch (err) {\n      throw new Error();\n    }\n  };\n  export default {\n    save,\n    get,\n  }","import React, { Component } from \"react\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport shortid from \"shortid\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport storage from \"./utils/storage\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filterContacts: [],\n    filter: \"\",\n    name: \"\",\n    number: \"\",\n  };\n  notifyA = () => toast(\"Enter name and number\");\n  notifyB = () => {\n    const { name } = this.state;\n    toast(`${name} is already in contacts`);\n  };\n\n  addToContacts = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const newContacts = { name: name, number: number, id: shortid.generate() };\n\n    this.isContact() !== true\n      ? name.length && number.length\n        ? this.setState(prev => ({\n            contacts: [newContacts, ...prev.contacts],\n            // filterContacts: [newContacts, ...prev.filterContacts],\n          }))\n        : this.notifyA()\n      : this.notifyB();\n\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  inputHandler = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  filterContacts = e => {\n    e.preventDefault();\n    e.persist();\n    const { contacts } = this.state;\n    this.setState(() => {\n      const filterContacts = contacts.filter(\n        el =>\n          el.name.toLowerCase().includes(e.target.value) ||\n          el.number.toLowerCase().includes(e.target.value),\n      );\n      return {\n        filterContacts,\n      };\n    });\n  };\n\n  deleteContact = id => {\n    const { contacts } = this.state;\n    const ContactListNew = contacts.filter(el => el.id !== id);\n\n    this.setState({\n      contacts: ContactListNew,\n      // filterContacts: ContactListNew,\n    });\n  };\n\n  isContact = e => {\n    const { name, contacts } = this.state;\n    return contacts.some(\n      el => el.name.toLocaleLowerCase() === name.toLocaleLowerCase(),\n    );\n  };\n\n  componentDidMount() {\n    const contactsData = storage.get(\"contacts\");\n    if (contactsData) {\n      this.setState({\n        contacts: contactsData,\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      storage.save(\"contacts\", this.state.contacts);\n    }\n    console.log(this.state.filterContacts);\n  }\n\n  contactsId = shortid.generate();\n  render() {\n    const { name, number, contacts, filter, filterContacts } = this.state;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm\n          handleChangeName={this.inputHandler}\n          nameValue={name}\n          numberValue={number}\n          handleChangeNumber={this.inputHandler}\n          addToContacts={this.addToContacts}\n          contactsId={this.contactsId}\n          isContact={this.isContact}\n        />\n\n        <h2>Contacts</h2>\n        <Filter\n          handleChangeNameFilter={this.inputHandler}\n          filterContacts={this.filterContacts}\n          contacts={contacts}\n          filter={filter}\n        />\n        <ContactList\n          contacts={contacts}\n          filterContacts={filterContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__fRqtb\",\"label-name\":\"ContactForm_label-name__3grc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete\":\"ContactList_delete__2-XUe\"};"],"sourceRoot":""}